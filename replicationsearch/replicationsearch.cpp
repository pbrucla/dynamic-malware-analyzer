/*
Makes with
    asid_instr_count
    asidstory
    callstack_instr
    syscalls2
    replicationsearch
in config.panda
*/

#include "panda/plugin.h"
#include "syscalls2/syscalls_ext_typedefs.h"

void my_NtCreateFile_enter(
	CPUState* env,
	unsigned int pc,
	unsigned int FileHandle,
	unsigned int DesiredAccess,
	unsigned int ObjectAttributes,
	unsigned int IoStatusBlock,
	unsigned int AllocationSize,
	unsigned int FileAttributes,
	unsigned int ShareAccess,
	unsigned int CreateDisposition,
	unsigned int CreateOptions,
	unsigned int EaBuffer,
	unsigned int EaLength){
	
	printf("NtCreateFile(FileHandle=%x, DesiredAccess=%x, ObjectAttributes=%x, "
                     "IoStatusBlock=%x, AllocationSize=%x, FileAttributes=%x, "
                     "ShareAccess=%x, CreateDisposition=%x, CreateOptions=%x, "
					 "EaBuffer=%x, EaLength=%x)\n",
        FileHandle, DesiredAccess, ObjectAttributes, IoStatusBlock, 
		AllocationSize, FileAttributes, ShareAccess, CreateDisposition,
		CreateOptions, EaBuffer, EaLength);
	return;
}

extern "C" {
    bool init_plugin(void*);
    void uninit_plugin(void*);

    // API Functions
}

bool init_plugin(void *self) {
	// PPP_REG_CB("syscalls2", on_unknown_sys_enter, test_one) ;
    PPP_REG_CB("syscalls2", on_NtCreateFile_enter, my_NtCreateFile_enter);
    return true;
}

void uninit_plugin(void *self) {
}

void test_one (CPUState *env, target_ulong pc, target_ulong callno)
{
        printf("Hello, World!");
}

